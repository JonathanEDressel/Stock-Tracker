@page
@using Portfolio_Tracker.Models
@model StocksModel
@{
    <style>
        .row-content:hover {
            background-color: dodgerblue;
        }
    </style>
    <div class="container" style="color: white;">
        <div class="row">
            <div class="col align-self-center" style="text-align: center;">
                <h1>Positions</h1>
            </div>
        </div>
    </div>
    <form method="post">
        <div class="container" style="color: white;">
            <div class="row justify-content-start">
                <div class="col-auto">
                    <span>
                        <span style="font-weight: 650;">Stock</span>
                        <input type="text" name="symbol" placeholder="NVDA" />
                    </span>
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-success">Add Stock</button>
                </div>
                <div class="col-auto">
                    <button class="btn btn-primary" type="submit" asp-page-handler="SyncStocks">
                            <i class="fa-solid fa-arrows-rotate"></i>
                    </button>
                </div>
            </div>
        </div>
    </form>

    <table class="table" style="color: white;">
        <thead>
            <tr>
                <th>Symbol</th>
                <th>Company</th>
                <th>Sector</th>
                <th>Shares</th>
                <th>Current Price</th>
                <th>Open Price</th>
                <th>High Price</th>
                <th>Low Price</th>
                <th></th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (StockModel stock in Model.Stocks)
            {
                <tr class="row-content">
                    <td>
                        <span>@stock.Symbol</span>
                    </td>
                    <td>
                        @stock.Company
                    </td>
                    <td>
                        <span>@stock.Sector</span>
                    </td>
                    <td>
                        <input type="number" class="shares-input" value="@stock.SharesOwned" data-stock-id="@stock.Id" />
                    </td>
                    <td>
                        <span>@stock.CurrentPrice</span>
                    </td>
                    <td>
                        <span>@stock.OpenPrice</span>
                    </td>
                    <td>
                        <span>@stock.HighPrice</span>
                    </td>
                    <td>
                        <span>@stock.LowPrice</span>
                    </td>
                    <td>
                        <form method="post" asp-page-handler="SaveStocks" data-form-id="@stock.Id">
                            <input type="hidden" name="id" value="@stock.Id" />
                            <input type="hidden" name="shares" value="@stock.SharesOwned" />
                            <button class="btn btn-success save-button" type="submit" data-stock-id="@stock.Id">
                                <i class="fa-regular fa-floppy-disk"></i>
                            </button>
                        </form>
                    </td>
                    <td>
                        <form method="post" asp-page-handler="Delete" asp-route-id="@stock.Id">
                            <button class="btn btn-danger" type="submit">
                                <i class="fa-solid fa-trash"></i>
                            </button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
     </table>
    <script>
        document.querySelectorAll('.save-button').forEach(button => {
            button.addEventListener('click', function (e) {
                const stockId = this.dataset.stockId;
                const input = document.querySelector(`.shares-input[data-stock-id='${stockId}']`);
                const form = document.querySelector(`form[data-form-id='${stockId}']`);
                if (input && form) {
                    const hiddenInput = form.querySelector('input[name="shares"]');
                    hiddenInput.value = input.value; // Update the hidden input with the current value of the shares input
                }
            });
        });
    </script>
     <div>
        <div class="d-flex justify-content-center">
            <div class="col-auto">
                @await Html.PartialAsync("_PieChartPartial", Model.PieChartData)
            </div>
        </div>
     </div>
}

